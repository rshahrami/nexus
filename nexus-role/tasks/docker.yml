
- name: get users with flag
  shell: cat "{{ playbook_dir }}/file_list_of_docker_package"
  register: debdocker
  delegate_to: localhost


- name: copy docker rpm file to server
  copy:
    src: "{{ playbook_dir }}/nexus-role/files/{{ item }}"
    dest: /root/
  loop: "{{ debdocker.stdout_lines }}"
  when: ansible_distribution == "Ubuntu"



- name: install docker deb pakages
  apt:
    deb: "/root/{{ item }}"
    state: present
  loop: "{{ debdocker.stdout_lines }}" 
  when: ansible_distribution == "Ubuntu"



- name: Creates directory for daemon docker
  file:
    path: /etc/docker/
    state: directory


- name: Creates daemon.json file for docker
  file:
    path: /etc/docker/daemon.json
    state: touch


- name: enable service docker
  systemd:
    name: "{{ item }}"
    enabled: yes
  with_items:
    - docker
    - containerd


- name: start service docker
  systemd:
    state: started
    name: "{{ item }}"
  with_items:
    - docker
    - containerd


- name: add group docker
  group:
    name: docker
    state: present


- name: usermod docker
  user:
    name: administrator
    groups: [docker]
    append: yes


- name: remove all deb file
  shell: rm -rf /root/*.deb
  when: ansible_distribution == "Ubuntu"

- name: remove all rpm file
  shell: rm -rf /root/*.rpm
  when: ansible_distribution == "centos"


- name: remove all deb file
  shell: rm -rf package*


- name: Reboot
  reboot:
    reboot_timeout: 180
    pre_reboot_delay: 10
    post_reboot_delay: 30